const web3 = require('../../web3');
const ABI = require('../constants/abis');

class PlayerService {
    
    async getPlayerInfo(abi, address) {
        const contract = new web3.eth.Contract(abi, address)

        return await contract.methods.players(address).call()
        .then(response => {
            return response;
        })
        .catch(error => {
            throw error;
        })
    }

    async getPlayers(abi, address) {
        const registry = new web3.eth.Contract(abi, "0xb09b45844ce3c465300c82bdd1be10e2738ea0c4")
        
        return await registry.methods.getPlayersForAddress(address).call()
        .then(response => {
            return response;
        })
        .catch(error => {
            throw error;
        })
    }

    async createPlayer(player, player_price) {

        const contract = new web3.eth.Contract(ABI.player_abi, null, {
            gasPrice: 20000000000,
            gas: 1000000
        })

        return await contract.deploy({
            data: '608060405273b09b45844ce3c465300c82bdd1be10e2738ea0c46000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051610af1380380610af1833981810160405260e081101561007a57600080fd5b810190808051604051939291908464010000000082111561009a57600080fd5b838201915060208201858111156100b057600080fd5b82518660018202830111640100000000821117156100cd57600080fd5b8083526020830192505050908051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b506040526020018051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050503481808210156101cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610ace6023913960400191505060405180910390fd5b600488141561020057600a85600386026002890260048b02010101816101f157fe5b04600260070181905550610266565b600388141561023457600a60028602600286026004890260028b020101018161022557fe5b04600260070181905550610265565b600288141561026457600a60058602600186026002890260028b020101018161025957fe5b046002600701819055505b5b5b6000600260000160006101000a81548160ff021916908315150217905550886002600101908051906020019061029d929190610349565b50866002600301819055508560026004018190555084600260050181905550836002600601819055508760028001819055506001600260080160006101000a81548160ff0219169083151502179055508260026009018190555033600260080160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050506103ee565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061038a57805160ff19168380011785556103b8565b828001600101855582156103b8579182015b828111156103b757825182559160200191906001019061039c565b5b5090506103c591906103c9565b5090565b6103eb91905b808211156103e75760008160009055506001016103cf565b5090565b90565b6106d1806103fd6000396000f3fe6080604052600436106100295760003560e01c806348db5f891461002e57806349f22cd814610138575b600080fd5b34801561003a57600080fd5b50610043610142565b604051808c151515158152602001806020018b81526020018a8152602001898152602001888152602001878152602001868152602001851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182810382528c818151815260200191508051906020019080838360005b838110156100f35780820151818401526020810190506100d8565b50505050905090810190601f1680156101205780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b61014061025c565b005b60028060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101ef5780601f106101c4576101008083540402835291602001916101ef565b820191906000526020600020905b8154815290600101906020018083116101d257829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff16908060080160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806009015490508b565b338073ffffffffffffffffffffffffffffffffffffffff16600260080160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f7520616c7265616479206f776e207468697320706c61796572000000000081525060200191505060405180910390fd5b60011515600260080160009054906101000a900460ff161515146103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54686520706c61796572206973206e6f74206c6973746564000000000000000081525060200191505060405180910390fd5b3480600260090154111561042c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b600260000160009054906101000a900460ff161561061857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fd014d59600260080160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633306040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b50505050600260080160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60023073ffffffffffffffffffffffffffffffffffffffff1631816105ea57fe5b049081150290604051600060405180830381858888f19350505050158015610616573d6000803e3d6000fd5b505b33600260080160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260000160006101000a81548160ff0219169083151502179055506000600260080160006101000a81548160ff021916908315150217905550505056fea265627a7a7231582051bfe3c27e9bed9131161ac1c1980c879e1c141656c236878b79a377428aaf1664736f6c634300050b0032496e73756666696369656e742066756e647320746f2063726561746520706c61796572',
            arguments: [player.name, player.pos, player.att, player.pass, player.def, player.phys, player_price]
        })
        .send({
            from: web3.eth.defaultAccount,
            value: player_price
        })
        .then((response) => {
            console.log(response.methods.player().call())
        })
        .catch(error => {
            throw error;
        })
    }
}

module.exports = new PlayerService()